@use "variables";

@mixin buildThemeColorVars($themeName) {
  // Loop through the colors and set each as a var:
  @each $colorName, $colorValue in map-get(variables.$colors, $themeName) {
    --#{$colorName}: #{$colorValue};
  }
}

@mixin overlay($color: var(--color-primary)) {
  &::before {
    background-color: $color;
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
  }
}

@mixin border($color: var(--color-primary)) {
  box-shadow: inset 0 0 0 2px $color;
  border-radius: 6px;
  border: none;
}

@mixin animateChange($length: variables.$quick-change, $attributes: all) {
  $result: ();

  @for $i from 1 through length($attributes) {
    $prop: nth($attributes, $i);
    $result: append($result, $prop);
    $result: append($result, ease-in-out $length);

    @if $i != length($attributes) {
      $result: append(
        $result,
        unquote(
          $string: ",",
        )
      );
    }
  }

  -webkit-transition: $result;
  -moz-transition: $result;
  -o-transition: $result;
  -ms-transition: $result;
  transition: $result;
}

@mixin animateUnderline($color: var(--color-primary)) {
  position: relative;

  &::before {
    content: "";
    position: absolute;
    display: block;
    width: 100%;
    height: 2px;
    bottom: 0;
    left: 0;
    background-color: $color;
    transform: scaleX(0);
    transition: transform variables.$quick-change ease;
  }

  &.active::before,
  &:hover::before {
    transform: scaleX(1);
  }
}

@mixin animateUnderlineReverse($color: var(--color-primary)) {
  position: relative;

  &::before {
    content: "";
    position: absolute;
    display: block;
    width: 100%;
    height: 2px;
    bottom: 0;
    left: 0;
    background-color: $color;
    transform: scaleX(1);
    transition: transform variables.$quick-change ease;
  }

  &.active::before,
  &:hover::before {
    transform: scaleX(0.2);
  }
}

@mixin magicBorder($width, $color, $duration, $direction) {
  position: relative;
  &:before {
    border-radius: 4px;
    content: "";
    position: absolute;
    width: calc(100% + #{$width * 2});
    height: calc(100% + #{$width * 2});
    top: calc(#{$width}/ -1);
    left: calc(#{$width}/ -1);
    background: linear-gradient(to right, $color 0%, $color 100%),
      linear-gradient(to top, $color 50%, transparent 50%),
      linear-gradient(to top, $color 50%, transparent 50%),
      linear-gradient(to right, $color 0%, $color 100%),
      linear-gradient(to left, $color 0%, $color 100%);
    background-size: 100% $width, $width 200%, $width 200%, 0% $width, 0% $width;
    background-position: 50% 100%, 0% 0%, 100% 0%, 100% 0%, 0% 0%;
    background-repeat: no-repeat, no-repeat;
    transition: transform $duration ease-in-out, background-position $duration ease-in-out,
      background-size $duration ease-in-out;
    transform: scaleX(0) rotate(180deg * $direction);
    transition-delay: $duration * 2, $duration, 0s;
  }
  &:hover {
    &:before {
      background-size: 200% $width, $width 400%, $width 400%, 55% $width, 55% $width;
      background-position: 50% 100%, 0% 100%, 100% 100%, 100% 0%, 0% 0%;
      transform: scaleX(1) rotate(180deg * $direction);
      transition-delay: 0s, $duration, $duration * 2;
    }
  }
}